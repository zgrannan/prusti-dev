window.SIDEBAR_ITEMS = {"enum":[["BinaryOpKind",""],["BuiltinFunc",""],["Expression",""],["OperandKind",""],["Predicate",""],["Rvalue",""],["Statement",""],["Successor",""],["Type",""],["TypeDecl",""],["UnaryOpKind",""]],"mod":[["ast",""],["builders",""],["cfg",""],["expression",""],["operations",""],["ty",""],["type_decl",""],["visitors",""]],"struct":[["AddrOf",""],["Assert","Assert the boolean expression."],["Assign",""],["Assume","Assume the boolean expression."],["BasicBlock",""],["BasicBlockId",""],["BinaryOp",""],["BorShorten",""],["BuiltinFuncApp",""],["CloseFracRef",""],["CloseMutRef",""],["Comment",""],["Conditional",""],["Constant",""],["Constructor",""],["Consume","Consume the operand."],["ContainerOp",""],["CopyPlace","Copy assignment."],["DeadInclusion",""],["DeadLifetime",""],["Deref",""],["Downcast",""],["EndLft",""],["Exhale","Exhale the permission denoted by the place."],["Field",""],["FieldDecl",""],["FuncApp",""],["FunctionDecl",""],["Havoc","Havoc the permission denoted by the place."],["Inhale","Inhale the permission denoted by the place."],["LabelledOld",""],["LeakAll","Tells fold-unfold to leak all predicates. This marks the end of the unwinding path."],["LetExpr",""],["LifetimeReturn",""],["LifetimeTake",""],["LifetimeToken",""],["Local",""],["LoopInvariant","The loop invariant."],["MemoryBlockHeap","A memory block on the heap."],["MemoryBlockHeapDrop","A permission to deallocate a (precisely) matching `MemoryBlockHeap`."],["MemoryBlockStack","A memory block on the stack allocated with `StorageLive`."],["MemoryBlockStackDrop","A permission to deallocate a (precisely) matching `MemoryBlockStack`."],["MovePlace","Move assignment."],["NewLft",""],["ObtainMutRef",""],["OldLabel",""],["OpenFracRef",""],["OpenMutRef",""],["Operand",""],["ProcedureDecl",""],["Quantifier",""],["Seq",""],["SetUnionVariant",""],["Trigger",""],["UnaryOp",""],["VariableDecl",""],["Variant",""],["WriteAddress","Initialization of a memory location with a given constant."],["WritePlace","Initialization of a place with a given constant."]],"trait":[["Generic",""]],"type":[["DiscriminantRange",""],["DiscriminantValue",""]]};