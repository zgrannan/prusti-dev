window.SIDEBAR_ITEMS = {"fn":[["collapse","Try to collapse all places in `places` by following the `guide_place`. This function is basically the reverse of `expand_struct_place`."],["expand","Subtract the `subtrahend` place from the `minuend` place. The subtraction is defined as set minus between `minuend` place replaced with a set of places that are unrolled up to the same level as `subtrahend` and the singleton `subtrahend` set. For example, `subtract(x.f, x.f.g.h)` is performed by unrolling `x.f` into `{x.g, x.h, x.f.f, x.f.h, x.f.g.f, x.f.g.g, x.f.g.h}` and subtracting `{x.f.g.h}` from it, which results into `{x.g, x.h, x.f.f, x.f.h, x.f.g.f, x.f.g.g}`."],["expand_one_level","Expand `current_place` one level down by following the `guide_place`. Returns the new `current_place` and a vector containing other places that could have resulted from the expansion."],["get_attributes",""],["get_local_attributes",""],["has_abstract_predicate_attr",""],["has_extern_spec_attr","Check if `prusti::extern_spec` is among the attributes."],["has_prusti_attr","Check if `prusti::<name>` is among the attributes. Any arguments of the attribute are ignored."],["has_spec_only_attr","Check if `prusti::spec_only` is among the attributes."],["has_to_model_fn_attr",""],["has_to_model_impl_attr",""],["has_trait_bounds_ghost_constraint",""],["is_prefix","Check if the place `potential_prefix` is a prefix of `place`. For example:"],["read_extern_spec_attr",""],["read_prusti_attr","Read the value stored in a single Prusti attribute (e.g. `prusti::<attr_name>=\"...\")`."],["read_prusti_attrs","Read the value stored in a Prusti attribute (e.g. `prusti::<attr_name>=\"...\")`."],["try_pop_deref","Pop the last element from the place if it is a dereference."],["try_pop_one_level","Pop the last projection from the place and return the new place with the popped element."]],"struct":[["VecPlace","A different way to represent a place that is more similar to the one mentioned in the issue https://github.com/rust-lang/rust/issues/52708."],["VecPlaceComponent",""]]};