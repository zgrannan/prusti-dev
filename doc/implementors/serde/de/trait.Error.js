(function() {var implementors = {};
implementors["bincode"] = [{"text":"impl <a class=\"trait\" href=\"serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a> for <a class=\"type\" href=\"bincode/type.Error.html\" title=\"type bincode::Error\">Error</a>","synthetic":false,"types":["bincode::error::Error"]}];
implementors["config"] = [{"text":"impl <a class=\"trait\" href=\"serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a> for <a class=\"enum\" href=\"config/enum.ConfigError.html\" title=\"enum config::ConfigError\">ConfigError</a>","synthetic":false,"types":["config::error::ConfigError"]}];
implementors["csv"] = [{"text":"impl <a class=\"trait\" href=\"serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a> for <a class=\"struct\" href=\"csv/struct.DeserializeError.html\" title=\"struct csv::DeserializeError\">DeserializeError</a>","synthetic":false,"types":["csv::deserializer::DeserializeError"]}];
implementors["json5"] = [{"text":"impl <a class=\"trait\" href=\"serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a> for <a class=\"enum\" href=\"json5/enum.Error.html\" title=\"enum json5::Error\">Error</a>","synthetic":false,"types":["json5::error::Error"]}];
implementors["ron"] = [{"text":"impl <a class=\"trait\" href=\"serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a> for <a class=\"struct\" href=\"ron/error/struct.Error.html\" title=\"struct ron::error::Error\">Error</a>","synthetic":false,"types":["ron::error::Error"]}];
implementors["serde"] = [];
implementors["serde_json"] = [{"text":"impl <a class=\"trait\" href=\"serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a> for <a class=\"struct\" href=\"serde_json/struct.Error.html\" title=\"struct serde_json::Error\">Error</a>","synthetic":false,"types":["serde_json::error::Error"]}];
implementors["toml"] = [{"text":"impl <a class=\"trait\" href=\"serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a> for <a class=\"struct\" href=\"toml/de/struct.Error.html\" title=\"struct toml::de::Error\">Error</a>","synthetic":false,"types":["toml::de::Error"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()