name: Test

on:
  push:
    branches: [master, staging, trying]
    paths-ignore: 'docs/**'
  pull_request:
    branches: [master]
    paths-ignore: 'docs/**'

env:
  RUST_BACKTRACE: 1
  PRUSTI_ASSERT_TIMEOUT: 60000

jobs:
  # Run a subset of the tests that used to fail often.
  # The goal here is to fail fast and give quick feedback to the developers.
  quick-tests:
    runs-on: ubuntu-latest
    # Only run when triggered by a pull request event
    if: github.event_name == 'pull_request'
    steps:
      - name: Do nothing
        run: true

  # Run clippy checks on PRs.
  clippy-check:
    runs-on: ubuntu-latest
    steps:
      - name: Do nothing
        run: true

  # Run rustfmt checks on PRs.
  fmt-check:
    runs-on: ubuntu-latest
    steps:
      - name: Do nothing
        run: true

  # Check that we depend on the compiler only through SMIR.
  smir-check:
    runs-on: ubuntu-latest
    steps:
      - name: Do nothing
        run: true


  # Run a subset of the tests with the purification optimization enabled
  # to ensure that we do not introduce regressions.
  purification-tests:
    runs-on: ubuntu-latest
    env:
      PRUSTI_ENABLE_PURIFICATION_OPTIMIZATION: true
    steps:
      - name: Do nothing
        run: true

  # Run all the tests.
  all-tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Do nothing
        run: true

  # Run Prusti on itself. Currently disabled because of many bugs in Prusti.
  test-on-prusti:
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Do nothing
        run: true
